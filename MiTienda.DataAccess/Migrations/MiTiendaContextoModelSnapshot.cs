// <auto-generated />
using System;
using MiTienda.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiTienda.DataAccess.Migrations
{
    [DbContext(typeof(MiTiendaContexto))]
    partial class MiTiendaContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.ArticuloDB", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticulo"), 1L, 1);

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<double>("MargenGanancia")
                        .HasColumnType("float");

                    b.Property<double?>("NetoGravado")
                        .HasColumnType("float");

                    b.Property<double>("PorcentajeIVA")
                        .HasColumnType("float");

                    b.Property<double?>("PrecioFinal")
                        .HasColumnType("float");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.ToTable("Articulo", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.CategoriaDB", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.ClienteDB", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int?>("IdCondicionTributaria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdCondicionTributaria");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.ColorDB", b =>
                {
                    b.Property<int>("IdColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColor"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColor");

                    b.ToTable("Color", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.CondicionTributariaDB", b =>
                {
                    b.Property<int>("IdCondicionTributaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCondicionTributaria"), 1L, 1);

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCondicionTributaria");

                    b.ToTable("CondicionTributaria", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.InventarioDB", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInventario"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdStock")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.HasKey("IdInventario");

                    b.HasIndex("IdStock");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.LineaDeVentaDB", b =>
                {
                    b.Property<int>("IdLineaDeVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLineaDeVenta"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdStock")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.HasKey("IdLineaDeVenta");

                    b.HasIndex("IdStock");

                    b.HasIndex("IdVenta");

                    b.ToTable("LineaDeVenta", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.MarcaDB", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.PagoDB", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"), 1L, 1);

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTipoPago")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("IdPago");

                    b.HasIndex("IdTipoPago");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.PuntoDeVentaDB", b =>
                {
                    b.Property<int>("IdPuntoDeVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPuntoDeVenta"), 1L, 1);

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdPuntoDeVenta");

                    b.HasIndex("IdSucursal");

                    b.ToTable("PuntoDeVenta", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.StockDB", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"), 1L, 1);

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdColor")
                        .HasColumnType("int");

                    b.Property<int>("IdTalle")
                        .HasColumnType("int");

                    b.HasKey("IdStock");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdColor");

                    b.HasIndex("IdTalle");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.SucursalDB", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursal"), 1L, 1);

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdSucursal");

                    b.HasIndex("IdTienda");

                    b.ToTable("Sucursal", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TalleDB", b =>
                {
                    b.Property<int>("IdTalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTalle"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTipoTalle")
                        .HasColumnType("int");

                    b.HasKey("IdTalle");

                    b.HasIndex("IdTipoTalle");

                    b.ToTable("Talle", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TiendaDB", b =>
                {
                    b.Property<int>("IdTienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTienda"), 1L, 1);

                    b.Property<string>("Cuil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCondicionTributaria")
                        .HasColumnType("int");

                    b.HasKey("IdTienda");

                    b.HasIndex("IdCondicionTributaria");

                    b.ToTable("Tienda", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TipoComprobanteDB", b =>
                {
                    b.Property<int>("IdTipoComprobante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoComprobante"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoComprobante");

                    b.ToTable("TipoComprobante", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TipoPagoDB", b =>
                {
                    b.Property<int>("IdTipoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPago"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoPago");

                    b.ToTable("TipoPago", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TipoTalleDB", b =>
                {
                    b.Property<int>("IdTipoTalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoTalle"), 1L, 1);

                    b.Property<string>("Descipcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoTalle");

                    b.ToTable("TipoTalle", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.VendedorDB", b =>
                {
                    b.Property<int>("IdVendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVendedor"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVendedor");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Vendedor", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.VentaDB", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"), 1L, 1);

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdPago")
                        .HasColumnType("int");

                    b.Property<int>("IdPuntoDeVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoComprobante")
                        .HasColumnType("int");

                    b.Property<int?>("IdVendedor")
                        .HasColumnType("int");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPago");

                    b.HasIndex("IdPuntoDeVenta");

                    b.HasIndex("IdTipoComprobante");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Venta", (string)null);
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.ArticuloDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.CategoriaDB", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.MarcaDB", "Marca")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.ClienteDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.CondicionTributariaDB", "ConTributaria")
                        .WithMany()
                        .HasForeignKey("IdCondicionTributaria");

                    b.Navigation("ConTributaria");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.InventarioDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.StockDB", "Stock")
                        .WithMany()
                        .HasForeignKey("IdStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.SucursalDB", "Sucursal")
                        .WithMany()
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.LineaDeVentaDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.StockDB", "Stock")
                        .WithMany()
                        .HasForeignKey("IdStock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.VentaDB", "Venta")
                        .WithMany()
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.PagoDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.TipoPagoDB", "TipoPago")
                        .WithMany()
                        .HasForeignKey("IdTipoPago");

                    b.Navigation("TipoPago");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.PuntoDeVentaDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.SucursalDB", "Sucursal")
                        .WithMany()
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.StockDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.ArticuloDB", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.ColorDB", "Color")
                        .WithMany()
                        .HasForeignKey("IdColor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.TalleDB", "Talle")
                        .WithMany()
                        .HasForeignKey("IdTalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Color");

                    b.Navigation("Talle");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.SucursalDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.TiendaDB", "Tienda")
                        .WithMany()
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TalleDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.TipoTalleDB", "TipoTalle")
                        .WithMany()
                        .HasForeignKey("IdTipoTalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTalle");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.TiendaDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.CondicionTributariaDB", "ConTributaria")
                        .WithMany()
                        .HasForeignKey("IdCondicionTributaria");

                    b.Navigation("ConTributaria");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.VendedorDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.SucursalDB", "Sucursal")
                        .WithMany()
                        .HasForeignKey("IdSucursal");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("MiTienda.DataAccess.PersistenceEntities.VentaDB", b =>
                {
                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.ClienteDB", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente");

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.PagoDB", "Pago")
                        .WithMany()
                        .HasForeignKey("IdPago");

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.PuntoDeVentaDB", "PuntoDeVenta")
                        .WithMany()
                        .HasForeignKey("IdPuntoDeVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.TipoComprobanteDB", "TipoComprobante")
                        .WithMany()
                        .HasForeignKey("IdTipoComprobante");

                    b.HasOne("MiTienda.DataAccess.PersistenceEntities.VendedorDB", "Vendedor")
                        .WithMany()
                        .HasForeignKey("IdVendedor");

                    b.Navigation("Cliente");

                    b.Navigation("Pago");

                    b.Navigation("PuntoDeVenta");

                    b.Navigation("TipoComprobante");

                    b.Navigation("Vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
